{"version":3,"sources":["config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/SignUp/SignUp.tsx","redux/actions/todos.ts","redux/actionTypes.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Statistics/Polygon.tsx","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","components/Login/Login.tsx","App.tsx","serviceWorker.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/store.ts","index.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","timerId","SignUp","props","onChangeAccount","e","setState","account","target","value","onChangePassword","password","onChangePasswordConformation","passwordConformation","submit","a","state","post","password_confirmation","Error","this","className","id","placeholder","prefix","UserOutlined","onChange","Password","type","onClick","to","React","updateTodo","payload","TodoInput","onKeyUp","keyCode","description","postTodo","addTodo","data","resource","suffix","EnterOutlined","mapDispatchToProps","connect","ownProps","TodoItem","params","completed","completed_at","Date","put","editTodo","editText","Editing","DeleteOutlined","deleted","Text","onDoubleClick","todoItemClass","require","classNames","editing","checked","Todos","unCompletedTodos","map","t","key","todos","filter","unDeletedTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","min","Math","floor","second","confirm","Modal","TomatoAction","updateTomato","ended_at","forceUpdate","showConfirm","icon","ExclamationCircleOutlined","onOk","abortTomato","cancelText","okText","aborted","unfinishedTomato","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","CloseCircleFilled","TomatoItem","format","TomatoList","list","dates","d","tomatoes","finishedTomatoes","length","Object","keys","sort","b","splice","_","Tomatoes","addTomato","groupBy","tomato","Polygon","point","firstDay","finishedY","range","finishedCount","pointArr","date","x","y","totalFinishedCount","join","fill","stroke","strokeWidth","points","TodoHistoryTodoItem","todo","action","formatText","itemType","updated_at","created_at","TabPane","Tabs","TodoHistory","finishedTodos","dailyFinishedTodos","finishedTodoList","finishedDates","deletedTodoList","deletedTodos","defaultActiveKey","tab","Statistics","dailyTodos","menu","Item","LogoutOutlined","Home","getTodos","get","resources","assign","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","DownOutlined","marginLeft","Login","newState","App","exact","path","component","Boolean","window","location","hostname","match","combineReducers","store","createStore","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f2751462.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\n\r\nconst ENV = process.env.NODE_ENV;\r\nlet publicUrl: string = '';\r\n\r\nif (ENV === 'development') {\r\n  publicUrl = '/';\r\n} else if (ENV === 'production') {\r\n  publicUrl = '/Tomato-Clock';\r\n}\r\n\r\n\r\nconst history = createBrowserHistory({\r\n  basename: publicUrl\r\n});\r\n\r\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\n\r\nconst appID = 'PxrfUhDx1B86NxdiLYKL1LUw';\r\nconst appSecret = 'RQ5DYVyc2TAwrMvV6eMmd4Ui';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\ninstance.interceptors.response.use((response) => {\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, (error) => {\r\n  if (error.response.status === 401) {\r\n    console.log('重定向');\r\n    history.push('/login')\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","import * as React from 'react';\r\nimport './CountDown.scss';\r\n\r\ninterface ICountDownProps {\r\n  timer: number;\r\n  duration: number;\r\n  onFinish: () => void;\r\n}\r\n\r\ninterface ICountDownState {\r\n  countDown: number;\r\n}\r\n\r\nlet timerId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n  constructor(props: ICountDownProps) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  get countDown() {\r\n    const min = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor(this.state.countDown / 1000 % 60);\r\n    return `${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`;\r\n  }\r\n\r\n  componentDidMount() {\r\n    timerId = setInterval(() => {\r\n      const time = this.state.countDown;\r\n      this.setState({countDown: time - 1000});\r\n      document.title = `${this.countDown} - Tomato Clock`;\r\n      if (time < 1000) {\r\n        document.title = 'Tomato Clock';\r\n        this.props.onFinish();\r\n        clearInterval(timerId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(timerId);\r\n  }\r\n\r\n  public render() {\r\n    const percent = 1 - this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span className=\"restTime\">{this.countDown}</span>\r\n        <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;","import * as React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './SignUp.scss';\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConformation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConformation: ''\r\n    };\r\n  }\r\n\r\n  onChangeAccount = (e: any) => {\r\n    this.setState({account: e.target.value});\r\n  };\r\n  onChangePassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n  onChangePasswordConformation = (e: any) => {\r\n    this.setState({passwordConformation: e.target.value});\r\n  };\r\n\r\n  submit = async () => {\r\n    const {account, password, passwordConformation} = this.state;\r\n\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account, password, password_confirmation: passwordConformation\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const {account, password, passwordConformation} = this.state;\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h1>番茄闹钟账号注册</h1>\r\n        <Input placeholder=\"请输入用户名\"\r\n               prefix={<UserOutlined/>}\r\n               value={account}\r\n               onChange={this.onChangeAccount}/>\r\n        <Input.Password placeholder=\"请输入密码\"\r\n                        value={password}\r\n                        onChange={this.onChangePassword}/>\r\n        <Input.Password placeholder=\"请确认密码\"\r\n                        value={passwordConformation}\r\n                        onChange={this.onChangePasswordConformation}/>\r\n        <Button type=\"primary\" onClick={this.submit} className=\"signUpButton\">注册</Button>\r\n        <p>如果你已有账号，请<Link to=\"/login\">登录</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const initTodos = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';","import * as React from 'react';\r\nimport {Input} from 'antd';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\nimport axios from '../../config/axios';\r\n\r\n\r\ninterface ITodoInputState {\r\n  description: string;\r\n}\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any;\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props: ITodoInputProps) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description: this.state.description});\r\n      this.props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState({description: ''});\r\n  };\r\n\r\n  public render() {\r\n    const {description} = this.state;\r\n    const suffix = description ? <EnterOutlined onClick={this.postTodo}/> : <span/>;\r\n    return (\r\n      <div className=\"TodoInput\" id=\"TodoInput\">\r\n        <Input\r\n          placeholder=\"添加新任务\"\r\n          suffix={suffix}\r\n          value={description}\r\n          onChange={(e) => this.setState({description: e.target.value})}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","import * as React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {EnterOutlined, DeleteOutlined} from '@ant-design/icons';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos';\r\nimport axios from '../../config/axios';\r\nimport './TodoItem.scss';\r\n\r\ninterface ITodoItemProps {\r\n  id: number;\r\n  description: string;\r\n  completed: boolean;\r\n  editing: boolean;\r\n  editTodo: (id: number) => any;\r\n  updateTodo: (payload: any) => any;\r\n}\r\n\r\ninterface ITodoItemState {\r\n  editText: string;\r\n}\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props: ITodoItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description\r\n    };\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date();\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input type=\"text\" value={this.state.editText}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}\r\n        />\r\n        <div className=\"iconWrapper\">\r\n          <EnterOutlined className=\"icon\" onClick={e => this.updateTodo({description: this.state.editText})}/>\r\n          <DeleteOutlined className=\"icon\" onClick={e => this.updateTodo({deleted: true})}/>\r\n        </div>\r\n      </div>\r\n    );\r\n    const Text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>;\r\n    let classNames = require('classnames');\r\n    const todoItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n    return (\r\n      <div className={todoItemClass} id=\"TodoItem\">\r\n        <Checkbox checked={this.props.completed}\r\n                  onChange={e => this.updateTodo({completed: e.target.checked})}\r\n        />\r\n        {this.props.editing ? Editing : Text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../redux/actions/todos';\r\nimport TodoInput from './TodoInput';\r\nimport TodoItem from './TodoItem';\r\nimport './Todos.scss';\r\n\r\n\r\nclass Todos extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter((t: any) => !t.deleted);\r\n  }\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter((t: any) => !t.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter((t: any) => t.completed);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodoInput/>\r\n        <div className=\"todoLists\">\r\n          {\r\n            this.unCompletedTodos.map((t: any) =>\r\n              <TodoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as React from 'react';\r\nimport {Button, Input, Modal} from 'antd';\r\nimport {CloseCircleFilled, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\nimport './ToamtoAction.scss';\r\n\r\n//import CountDown from './CountDownHook';\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => void;\r\n  updateTomato: (payload: any) => void;\r\n  unfinishedTomato: any;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string\r\n}\r\n\r\nconst {confirm} = Modal;\r\n\r\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props: ITomatoActionProps) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({\r\n        description: this.state.description,\r\n        ended_at: new Date()\r\n      });\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate();\r\n  };\r\n  showConfirm = () => {\r\n    confirm({\r\n      title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n      icon: <ExclamationCircleOutlined/>,\r\n      onOk: () => {\r\n        this.abortTomato();\r\n      },\r\n      cancelText: '取消',\r\n      okText: '确定',\r\n    });\r\n  };\r\n  abortTomato = () => {\r\n    this.updateTomato({aborted: true});\r\n    document.title = 'Tomato Clock';\r\n  };\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\" onClick={() => {this.props.startTomato();}}>开始番茄</Button>;\r\n    } else {\r\n      const startedAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startedAt > duration) {\r\n        html = <div className=\"inputWrapper\">\r\n          <Input value={this.state.description}\r\n                 placeholder=\"请输入你刚刚完成的任务\"\r\n                 onChange={e => this.setState({description: e.target.value})}\r\n                 onKeyUp={e => this.onKeyUp(e)}\r\n          />\r\n          <CloseCircleFilled className=\"icon\"\r\n                             onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startedAt < duration) {\r\n        const timer = duration - timeNow + startedAt;\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown timer={timer} duration={duration}\r\n                       onFinish={this.onFinish}/>\r\n            <CloseCircleFilled className=\"icon\"\r\n                               onClick={this.showConfirm}/>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoAction;","import * as React from 'react';\r\nimport {format} from 'date-fns';\r\nimport './TomatoList.scss';\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props: any) {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span className=\"timeRange\">{format(props.started_at, 'H:mm')} - {format(props.ended_at, 'H:mm')}</span>\r\n      <span className=\"description\">{props.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component<ITomatoListProps> {\r\n  constructor(props: ITomatoListProps) {\r\n    super(props);\r\n  }\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n  }\r\n\r\n  public render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d];\r\n      return (\r\n        <div key={d} className=\"dailyTomatoes\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\">{format(d, 'M月DD日')}</span>\r\n            <span className=\"finishedCount\">完成了{tomatoes.length}个番茄</span>\r\n          </div>\r\n          {\r\n            tomatoes.map((t: any) => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import * as React from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport TomatoList from './TomatoList';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport axios from '../../config/axios';\r\nimport {format} from 'date-fns';\r\n\r\n\r\ninterface ITomatoesProps {\r\n  addTomato: (payload: any) => any;\r\n  updateTomato: (payload: any) => any;\r\n  initTomatoes: (payload: any[]) => any;\r\n  tomatoes: any[];\r\n}\r\n\r\nconst _ = require('lodash');\r\n\r\nclass Tomatoes extends React.Component<ITomatoesProps> {\r\n  constructor(props: ITomatoesProps) {\r\n    super(props);\r\n  }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0];\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    return _.groupBy(finishedTomatoes, (tomato: any) => {\r\n      return format(tomato.started_at, 'YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 1500000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction startTomato={this.startTomato}\r\n                      unfinishedTomato={this.unfinishedTomato}\r\n                      updateTomato={this.props.updateTomato}/>\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\n\r\n\r\n","import * as React from 'react';\r\n\r\ninterface IPolygonProps {\r\n  data: any;\r\n  totalFinishedCount: number\r\n}\r\n\r\nclass Polygon extends React.Component<IPolygonProps> {\r\n  constructor(props: IPolygonProps) {\r\n    super(props);\r\n  }\r\n\r\n  point = () => {\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b);\r\n    });\r\n    const firstDay = dates[0];\r\n    if (firstDay) {\r\n      const range = new Date().getTime() - Date.parse(firstDay);\r\n      let finishedCount = 0;\r\n      let finishedY;\r\n      const pointArr = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240;\r\n        finishedCount += this.props.data[date].length;\r\n        const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60;\r\n        finishedY = y;\r\n        return `${x},${y}`;\r\n      });\r\n      return ['0,60', ...pointArr, `240,${finishedY}`, '240,60'].join(' ');\r\n    } else {\r\n      return '0,60 240,60';\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Polygon\" id=\"Polygon\">\r\n        <svg>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.point()}/>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Polygon;","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {format} from 'date-fns';\r\nimport {updateTodo} from '../../../redux/actions/todos';\r\nimport axios from '../../../config/axios';\r\nimport './TodoHistoryTodoItem.scss';\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n  todo: any;\r\n  itemType: string;\r\n  updateTodo: (payload: any) => void;\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\r\n  constructor(props: ITodoHistoryTodoItemProps) {\r\n    super(props);\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      console.log(params);\r\n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let action;\r\n    let formatText;\r\n    let time;\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm';\r\n      time = this.props.todo.updated_at;\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({completed: false})}>恢复</span>\r\n          <span onClick={() => this.updateTodo({deleted: true})}>删除</span>\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === 'deleted') {\r\n      formatText = 'YYYY-MM-DD';\r\n      time = this.props.todo.created_at;\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span className=\"time\">{format(time, formatText)}</span>\r\n          <span className=\"description\">{this.props.todo.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {format} from 'date-fns';\r\nimport {Tabs} from 'antd';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem';\r\nimport './TodoHistory.scss';\r\n\r\nconst _ = require('lodash');\r\nconst TabPane = Tabs.TabPane;\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[];\r\n}\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo: any) => {\r\n      return format(todo.updated_at, 'YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  constructor(props: ITodoHistoryProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span>{date}</span>\r\n              <span>周五</span>\r\n            </p>\r\n            <p className=\"finishedCount\">完成了{this.dailyFinishedTodos[date].length}个任务</p>\r\n          </div>\r\n          <div className=\"todoList\">\r\n            {\r\n              this.dailyFinishedTodos[date].map((todo: any) =>\r\n                <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\"/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedTodos.map(todo => {\r\n      return (\r\n        <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\"/>\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除的任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Polygon from './Polygon';\r\nimport {format} from 'date-fns';\r\nimport './Statistics.scss';\r\nimport TodoHistory from './TodoHistory/TodoHistory';\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[];\r\n}\r\n\r\nconst _ = require('lodash');\r\n\r\nclass Statistics extends React.Component<IStatisticsProps> {\r\n  constructor(props: IStatisticsProps) {\r\n    super(props);\r\n  }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo: any) => {\r\n      return format(todo.updated_at, 'YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul>\r\n          <li>统计</li>\r\n          <li>目标</li>\r\n          <li>番茄历史</li>\r\n          <li>\r\n            任务历史\r\n            累计完成{this.finishedTodos.length}个任务\r\n            <Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length}/>\r\n          </li>\r\n        </ul>\r\n        <TodoHistory/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Statistics);","import * as React from 'react';\r\nimport {Menu, Dropdown} from 'antd';\r\nimport {DownOutlined, UserOutlined, LogoutOutlined} from '@ant-design/icons';\r\nimport './Home.scss';\r\nimport axios from '../../config/axios';\r\nimport history from '../../config/history';\r\nimport Todos from '../Todos/Todos';\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('/login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\">\r\n      <UserOutlined/>\r\n      个人设置\r\n    </Menu.Item>\r\n    <Menu.Item key=\"2\" onClick={logout}>\r\n      <LogoutOutlined/>\r\n      <UserOutlined/>\r\n      注销\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes();\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map((t: any) => Object.assign({}, t, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    this.setState({user: response.data});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\" id=\"Home\">\r\n        <header>\r\n          <span className=\"logo\">LOGO</span>\r\n          <Dropdown overlay={menu}>\r\n            <span>{this.state.user && this.state.user.account}<DownOutlined style={{marginLeft: 8}}/></span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomatoes/>\r\n          <Todos/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as React from 'react';\r\nimport './Login.scss';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, ILoginState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    const newState: any = {};\r\n    newState[key] = value;\r\n    this.setState(newState);\r\n  };\r\n  submit = async () => {\r\n    const {account, password} = this.state;\r\n\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account, password\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>番茄闹钟账号登录</h1>\r\n        <Input placeholder=\"请输入用户名\"\r\n               prefix={<UserOutlined/>}\r\n               value={account}\r\n               onChange={(e)=>this.onChange('account',e.target.value)}/>\r\n        <Input.Password placeholder=\"请输入密码\"\r\n                        value={password}\r\n                        onChange={(e)=>this.onChange('password',e.target.value)}/>\r\n        <Button type=\"primary\" onClick={this.submit} className=\"loginButton\">登录</Button>\r\n        <p>如果你未注册账号，请立即<Link to=\"/signUp\">注册</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import * as React from 'react';\nimport {Router, Route} from 'react-router-dom';\nimport SignUp from './components/SignUp/SignUp';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport './App.css';\nimport history from './config/history';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Route exact={true} path=\"/\" component={Home}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/signUp\" component={SignUp}/>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos, tomatoes});","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}